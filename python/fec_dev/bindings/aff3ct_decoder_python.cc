/*
 * Copyright 2024 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/***********************************************************************************/
/* This file is automatically generated using bindtool and can be manually edited  */
/* The following lines can be configured to regenerate this file during cmake      */
/* If manual edits are made, the following tags should be modified accordingly.    */
/* BINDTOOL_GEN_AUTOMATIC(1)                                                       */
/* BINDTOOL_USE_PYGCCXML(0)                                                        */
/* BINDTOOL_HEADER_FILE(aff3ct_decoder.h)                                        */
/* BINDTOOL_HEADER_FILE_HASH(cce3a79aad31d5ca11b7c2c446f018a4)                     */
/***********************************************************************************/

#include <pybind11/complex.h>
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <gnuradio/fec_dev/aff3ct_decoder.h>
// pydoc.h is automatically generated in the build directory
#include <aff3ct_decoder_pydoc.h>

void bind_aff3ct_decoder(py::module& m)
{
    py::enum_<::gr::fec_dev::_quantizer_impl_t>(m, "_quantizer_impl_t")
        .value("STD", ::gr::fec_dev::_quantizer_impl_t::STD)
        .value("FAST", ::gr::fec_dev::_quantizer_impl_t::FAST)
        .value("NO", ::gr::fec_dev::_quantizer_impl_t::NO)
        .export_values();
    py::implicitly_convertible<int, ::gr::fec_dev::_quantizer_impl_t>();

    py::enum_<::gr::fec_dev::_decoder_impl_t>(m, "_decoder_impl_t")
        .value("STD", ::gr::fec_dev::_decoder_impl_t::STD)
        .value("FAST", ::gr::fec_dev::_decoder_impl_t::FAST)
        .value("GENIUS", ::gr::fec_dev::_decoder_impl_t::GENIUS)
        .value("VERY_FAST", ::gr::fec_dev::_decoder_impl_t::VERY_FAST)
        .export_values();
    py::implicitly_convertible<int, ::gr::fec_dev::_decoder_impl_t>();

    py::enum_<::gr::fec_dev::_simd_strat_t>(m, "_simd_strat_t")
        .value("SEQ", ::gr::fec_dev::_simd_strat_t::SEQ)
        .value("INTER", ::gr::fec_dev::_simd_strat_t::INTER)
        .value("INTRA", ::gr::fec_dev::_simd_strat_t::INTRA)
        .value("INTER_INTRA", ::gr::fec_dev::_simd_strat_t::INTER_INTRA)
        .export_values();
    py::implicitly_convertible<int, ::gr::fec_dev::_simd_strat_t>();
}